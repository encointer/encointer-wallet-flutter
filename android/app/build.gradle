def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 30

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'

        // Todo: Remove when resolved: https://github.com/flutter/flutter/issues/58247
        checkReleaseBuilds false
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "org.encointer.wallet"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // AppCenter will take care of signing, so the bundle may not be signed here.
            // uncomment the following line if you need to sign locally and provide all
            // credentials and jsk file path in ../key.properties
            // also uncomment the signing config referenced
            //signingConfig signingConfigs.release

            // To run `flutter run --release` locally, uncomment the following line
            //signingConfig signingConfigs.debug

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // add a product flavor for fdroid release
    flavorDimensions "deploy"
    productFlavors {
        dev {
            dimension "deploy"
            signingConfig signingConfigs.debug
            versionNameSuffix "-dev"
        }
        fdroid {
            dimension "deploy"
            signingConfig null
            versionNameSuffix ""
        }
        play {
            dimension "deploy"
            //signingConfig signingConfigs.release
            versionNameSuffix ""
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
