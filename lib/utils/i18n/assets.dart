const Map<String, String> enAssets = {
  'node.connecting': 'Connecting remote node...',
  'node.failed': 'Remote node connection failed',
  'transfer': 'Transfer',
  'receive': 'Receive',
  'copy': 'Copy',
  'address': 'Send to Address',
  'address.error': 'Invalid Address',
  'amount': 'Amount',
  'amount.error': 'Invalid amount',
  'amount.low': 'Insufficient balance',
  'currency': 'Currency',
  'currency.select': 'Select Currency',
  'community.currency': 'Community Currency',
  'make': 'Make Transfer',
  'balance': 'Balance',
  'locked': 'Locked',
  'available': 'Available',
  'reserved': 'Reserved',
  'gas.token': 'Gas Token',
  'all': 'All',
  'in': 'In',
  'out': 'Out',
  'end': 'No More Data',
  'detail': 'Detail',
  'success': 'Success',
  'fail': 'Failed',
  'value': 'Value',
  'fee': 'Fee',
  'tip': 'Tip',
  'tip.tip': '\nAdding a tip to this Tx, paying\nthe block author for greater priority.\n',
  'from': 'From',
  'to': 'To',
  'block': 'Block',
  'event': 'Event ID',
  'hash': 'TxHash',
  'polkascan': 'Open in Browser',
  'notify.receive': 'Token Received',
  'lock.democrac': 'via Democracy/Vote',
  'lock.phrelect': 'via Council/Vote',
  'lock.staking': 'via Staking/Bond',
  'lock.vesting': 'via Vesting',
  'claim': 'Claim DOT',
  'claim.agree': 'I Agree',
  'claim.terms': 'Terms and Conditions',
  'claim.terms.url': 'You can also find them at',
  'claim.eth.title': 'Enter the ETH address from the sale',
  'claim.eth': 'ETH address',
  'claim.eth.sign': 'Sign with your ETH address',
  'claim.eth.copy':
      'Click and copy the following string and sign it with the Ethereum account you used during the pre-sale in the wallet of your choice, using the string as the payload, and then paste the transaction signature object below:',
  'claim.amount': 'has a valid claim',
  'claim.empty': 'does not appear to have a valid claim.',
  'claim.empty2': 'Please double check that you have signed the transaction correctly on the correct ETH account.',
  'done?': 'done',
  'cross.chain': 'Cross chain',
  'assets.test': 'Test Tokens',
};

const Map<String, String> zhAssets = {
  'node.connecting': '正在连接远程节点...',
  'node.failed': '远程节点连接失败',
  'transfer': '转账',
  'receive': '收款',
  'copy': '复制',
  'address': '收款地址',
  'address.error': '无效地址',
  'amount': '数量',
  'amount.error': '格式错误',
  'amount.low': '余额不足',
  'currency': '币种',
  'currency.select': '选择币种',
  'make': '添加转账',
  'balance': '余额',
  'locked': '锁定',
  'available': '可用',
  'reserved': '保留',
  'all': '全部',
  'in': '转入',
  'out': '转出',
  'end': '加载完毕',
  'detail': '详情',
  'success': '成功',
  'fail': '失败',
  'value': '金额',
  'fee': '手续费',
  'tip': '小费',
  'tip.tip': '\n为出块人支付额外的费用，\n可以提高交易打包优先级。\n',
  'from': '付款地址',
  'to': '收款地址',
  'block': '区块',
  'event': '交易ID',
  'hash': '交易Hash',
  'polkascan': '在浏览器中查看',
  'notify.receive': '到账通知',
  'lock.democrac': '提案治理投票',
  'lock.phrelect': '议会选举投票',
  'lock.staking': '质押绑定',
  'lock.vesting': '投资锁定',
  'claim': '认领 DOT',
  'claim.agree': '同意',
  'claim.terms': '使用条款',
  'claim.terms.url': '您也可以通过链接查看原文',
  'claim.eth.title': '输入您参与售卖的以太坊地址',
  'claim.eth': '以太坊地址',
  'claim.eth.sign': '使用您的以太坊地址签名',
  'claim.eth.copy': '点击复制以下信息，并选择您常用的以太坊钱包将信息签名，然后将签名结果粘贴到下方的输入框中：',
  'claim.amount': '可认领代币',
  'claim.empty': '没有可以认领的代币。',
  'claim.empty2': '，请检查您的以太坊地址和签名信息。',
  'cross.chain': '跨链转账',
  'assets.test': '测试 Token',
};
