name: Deploy Flutter App to Appstore Connect

on:
  push:
    branches:
      - beta
      - cl/publish-test

jobs:
  build-and-deploy:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install flutter wrapper
        run: ./scripts/install_flutter_wrapper.sh

      - name: Get dependencies (i.e., melos)
        run: .flutter/bin/dart pub get

      - name: Melos Bootstrap
        run: .flutter/bin/dart run melos bootstrap

      - name: Setup Apple Code Signing - Import Certificates and Provisioning Profiles
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.CERT_P12_BASE64 }}
          p12-password: ${{ secrets.CERT_P12_PASSWORD }}
          mobileprovision-file-base64: ${{ secrets.MOBILE_PROVISION_BASE64 }}

      - name: Build iOS IPA
        run: .flutter/bin/dart run melos build-ipa-release
        env:
          CI: true

#      - name: Set up code signing
#        run: |
#          cd app
#          echo "${{ secrets.CERT_P12_BASE64 }}" | base64 --decode > certificate.p12
#          echo "${{ secrets.CERT_P12_PASSWORD }}" > certificate_password.txt
#          security create-keychain -p "${{ secrets.IOS_KEYCHAIN_PASSWORD }}" build.keychain
#          security import certificate.p12 -k build.keychain -P "$(cat certificate_password.txt)" -T /usr/bin/codesign
#          security list-keychains -s build.keychain
#          echo "${{ secrets.MOBILE_PROVISION_BASE64 }}" | base64 --decode > provisioning_profile.mobileprovision
#          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
#          cp provisioning_profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Archive the app
        run: |
          cd app
          xcodebuild -workspace ios/Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -archivePath $PWD/build/Runner.xcarchive archive
          xcodebuild -exportArchive \
            -archivePath $PWD/build/Runner.xcarchive \
            -exportPath $PWD/build \
            -exportOptionsPlist ios/ExportOptions.plist

      - name: Upload to TestFlight
        run: |
          cd app
          xcrun altool --upload-app --type ios \
            --file build/Runner.ipa \
            --apiKey ${{ secrets.APPLE_STORE_CONNECT_API_KEY }} \
            --issuerId ${{ secrets.APPLE_STORE_CONNECT_ISSUER_ID }} \
            --keyId ${{ secrets.APPLE_STORE_CONNECT_KEY_ID }}
