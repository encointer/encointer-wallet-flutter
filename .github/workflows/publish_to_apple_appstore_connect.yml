name: Deploy Flutter App to Appstore Connect

on:
  push:
    branches:
      - beta
      - cl/publish-test

jobs:
  build-and-deploy:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up code signing
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.CERT_P12_BASE64 }}
          P12_PASSWORD: ${{ secrets.CERT_P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.MOBILE_PROVISION_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.IOS_KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/Encointer_AppStore_Deployment.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          
          # check if certificate has been imported correctly
          echo "find keychain identity"
          security find-identity -v -p codesigning $KEYCHAIN_PATH

          # check if the keychain is accessible, and unlocked for signing
          echo "security show-keychain-info"
          security show-keychain-info $KEYCHAIN_PATH
          
          echo "provisioning profile UUID"
          grep -a -A1 UUID $PP_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          
          echo "provisioning profiles"
          ls ~/Library/MobileDevice/Provisioning\ Profiles/
          
          echo "Generate ExportOptions.plist"
          export EXPORT_METHOD=app-store
          export BUNDLE_ID=org.encointer.wallet
          export PROVISIONING_PROFILE=$PP_PATH
          envsubst < app/ios/ExportOptions-Template.plist > app/ios/ExportOptions.plist

      - name: Install flutter wrapper
        run: ./scripts/install_flutter_wrapper.sh

      - name: Get dependencies (i.e., melos)
        run: .flutter/bin/dart pub get

      - name: Melos Bootstrap
        run: .flutter/bin/dart run melos bootstrap

      - name: Build iOS IPA
        run: .flutter/bin/dart run melos build-ipa-release

      - name: xcode clean
        run: |
          xcodebuild -sdk iphoneos \
            -workspace app/ios/Runner.xcworkspace \
            -scheme Runner \
            clean \
            CODE_SIGN_STYLE=Manual

      - name: xcode archive
        run: |
          ls -al app/ios/build
          ls -al app/ios/build/Runner
          
          xcodebuild \
            -workspace app/ios/Runner.xcworkspace \
            -scheme Runner \
            archive \
            -sdk iphoneos \
            -archivePath app/ios/build/Runner \
            CODE_SIGN_STYLE=Manual

      - name: Export the .ipa file
        run: | 
          xcodebuild -exportArchive \
            -archivePath app/ios/build/Runner.xcarchive \
            -exportPath app/ios/build \
            -exportOptionsPlist app/ios/ExportOptions.plist

      - name: Upload to TestFlight
        run: |
          xcrun altool --upload-app --type ios \
            --file app/ios/build/Runner.ipa \
            --apiKey ${{ secrets.APPLE_STORE_CONNECT_API_KEY }} \
            --issuerId ${{ secrets.APPLE_STORE_CONNECT_ISSUER_ID }} \
            --keyId ${{ secrets.APPLE_STORE_CONNECT_KEY_ID }}
