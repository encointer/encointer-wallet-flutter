name: Android CI

on:
  push:
    branches: [master, f-droid]
  pull_request:
    branches: [master, f-droid]

jobs:
  cancel_previous_runs:
    name: Cancel Previous Runs
    runs-on: ubuntu-20.04
    steps:
      - uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

  build-android:
    # use macos to have hardware acceleration https://github.com/ReactiveCircus/android-emulator-runner/issues/46
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        # lower api-levels would be supported but the webView that is pre-installed on these images does not.
        api-level: [29] # 30 is broken for now, 29 is way too flaky
        include:
          - os: macos-latest
            # needs to be the `id` from the devices given by `avdmanager list device`
            device: "pixel_3a"
            # disable for now. it takes ages to build and launch the app and the upper limit of
            # recordings is 180s. The app has not even started by then.
            record_video: false
      fail-fast: false
    steps:
      # Setup Environment
      - uses: actions/checkout@v2

      - uses: monorepo-actions/config-for-actions@main
        id: config
        with:
          config_files: ./.github/action-config.json

      - name: Download encointer-node
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build-and-test.yml
          name: demo_package
          # in fact this action should download the latest artifact, but sometimes fails. Then we need to
          # set the `run_id` to force a download of an updated binary.
          run_id: 3553681091
          repo: encointer/encointer-node
          path: demo_package

      - name: Run encointer-node
        run: |
          cd demo_package
          ls -alt
          chmod +x encointer-node-notee
          chmod +x encointer-client-notee
          chmod +x ./client/bootstrap_demo_community.py
          ./encointer-node-notee --tmp --dev --enable-offchain-indexing true --rpc-methods unsafe &
          sleep 10
          cd client
          # taken from https://github.com/encointer/encointer-node/blob/master/scripts/install_python_deps.sh
          pip install geojson pyproj RandomWords wonderwords requests flask substrate-interface click
          ./bootstrap_demo_community.py --client ../encointer-client-notee

#      - uses: actions/setup-java@v1
#        with:
#          java-version: ${{ steps.config.outputs.java-version }}
#
#      - name: Install flutter wrapper
#        run: ./scripts/install_flutter.sh
#
#      - name: Setup Android SDK and accept licences
#        uses: android-actions/setup-android@v2
#
#      - name: List android images
#        run: sdkmanager --list | grep system-images
#
#      # JS Stuff
#      - uses: actions/setup-node@v2
#        with:
#          node-version: ${{ steps.config.outputs.node-version }}
#
#      - name: "Build JS"
#        working-directory: ./scripts
#        run: source ./init_env.sh && ./build_js.sh
#
#      - name: Gradle cache
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}
#
#      - name: AVD cache
#        uses: actions/cache@v2
#        id: avd-cache
#        with:
#          path: |
#            ~/.android/avd/*
#            ~/.android/adb*
#          key: avd-${{ matrix.api-level }}-${{ matrix.device }}
#
#      - name: "Create AVD and generate a clean snapshot for caching"
#        if: steps.avd-cache.outputs.cache-hit != 'true'
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: ${{ matrix.api-level }}
#          profile: ${{ matrix.device }}
#          force-avd-creation: false
#          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#          disable-animations: false
#          script: echo "Generated AVD snapshot for caching."
#
#      - name: "Android Integration Tests"
#        uses: reactivecircus/android-emulator-runner@v2
#        env:
#          ANDROID_DEBUG: "true"
#          RECORD: ${{ matrix.record_video }}
#          TEMP_DIR: ${{ steps.config.outputs.temp-screenshots }}
#        with:
#          api-level: ${{ matrix.api-level }}
#          profile: ${{ matrix.device }}
#          force-avd-creation: false
#          # as we use the cleanly cached emulator, we need to define `-no-snapshot-save` here.
#          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#          disable-animations: true
#          script: ./scripts/android_integration_test.sh
#
#      - name: "Upload screenshots"
#        if: always()
#        uses: actions/upload-artifact@v2
#        with:
#          name: ${{ matrix.device }}
#          path: ${{ steps.config.outputs.temp-screenshots }}
