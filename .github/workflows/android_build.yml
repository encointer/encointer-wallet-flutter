name: Android Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      # Setup Environment
      - uses: actions/checkout@v2
        with:
          # 2 to compare the last two revisions to check if JS changed
          fetch-depth: 2

      - uses: monorepo-actions/config-for-actions@main
        id: config
        with:
          config_files: ./.github/action-config.json

      - uses: actions/setup-java@v1
        with:
          java-version: ${{ steps.config.outputs.java-version }}

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ steps.config.outputs.flutter-version }}

      # JS Stuff
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.config.outputs.node-version }}

      - name: "Check if JS code was updated"
        uses: marceloprado/has-changed-path@v1
        id: js-changed
        with:
          paths: ${{ steps.config.outputs.js-service-encointer-path }}

      - name: "Setup JS Cache"
        id: cache-js
        uses: actions/cache@v2
        with:
          path: ${{ steps.config.outputs.encointer-main-js-path }}
          # change cache version in config to force cache overwrite.
          key: ${{ runner.os }}-${{ 'encointer.js' }}-{{ steps.config.outputs.cache-version }}

      - name: "Build JS if needed"
        # note: this logic is a bit flawed, as it does not realize when the second-last commit changed
        # the JS-code. To force build and update cache, change the config's cache version
        if: ${{ steps.js-changed.outputs.changed == 'true' || steps.cache-js.outputs.cache-hit != 'true' }}
        working-directory: ./scripts
        run: source ./init_env.sh && ./build_js.sh

      - name: "Build apk"
        run: flutter build apk --flavor fdroid
