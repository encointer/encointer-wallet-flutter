name: Unit Tests & Code Quality

on:
  push:
    branches: [master, f-droid, el-melos-packages]
  pull_request:
    branches: [master, f-droid, el-melos-packages]

env:
  JS_SERVICE_ENCOINTER_PATH: lib/js_service_encointer
  JS_SERVICE_ENCOINTER_MAIN: lib/js_service_encointer/dist/main.js
  MELOS_SDK_PATH: "$HOME/.pub-cache/bin"

jobs:
  flutter:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      # Setup Environment
      - uses: actions/checkout@v3

      - name: Install flutter wrapper
        run: ./scripts/install_flutter_wrapper.sh

      - name: Melos Install
        run: |
          export PATH="$PATH":"$HOME/.pub-cache/bin"
          chmod +x ./scripts/melos_install.sh && ./scripts/melos_install.sh

      - name: Melos Bootstrap
        run: |
          export PATH="$PATH":"$HOME/.pub-cache/bin"
          ./flutterw pub global run melos bootstrap        

      # Analyzer throws an error if an asset is missing
      - name: "Make mock-main.js"
        run: |
          mkdir -p ${{ env.JS_SERVICE_ENCOINTER_PATH }}/dist
          touch ${{ env.JS_SERVICE_ENCOINTER_MAIN }}

      # analyze and test
      - name: "Check fmt Encointer"
        run: |
          export PATH="$PATH":"$HOME/.pub-cache/bin"
          ./flutterw pub global run melos format-check

      - name: "Check fmt Packages"
        run: |
          export PATH="$PATH":"$HOME/.pub-cache/bin"
          ./flutterw pub global run melos format-check-packages   

      - name: "Analyze Code Encointer"
        run: |
          export PATH="$PATH":"$HOME/.pub-cache/bin"
          ./flutterw pub global run melos analyze-check

      - name: "Analyze Code Packages"
        run: |
          export PATH="$PATH":"$HOME/.pub-cache/bin"
          ./flutterw pub global run melos analyze-check-packages    

      - name: "Run unit tests Encointer"
        run: |
          export PATH="$PATH":"$HOME/.pub-cache/bin"
          ./flutterw pub global run melos unit-test-encointer-exclude-node-e2e

      - name: "Run unit tests Packages"
        run: |
          export PATH="$PATH":"$HOME/.pub-cache/bin"
          ./flutterw pub global run melos unit-test-packages   

      - name: "Run the build_runner and return an error if files are changed"
        run: |
          ./flutterw pub run build_runner build --delete-conflicting-outputs
          ./flutterw format . --line-length 120
          git diff --exit-code

    #  test-js:
    # Todo: Currently e2e tests are mixed with unit tests (although the amount of unit tests is really small)
