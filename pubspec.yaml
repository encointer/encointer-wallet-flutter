name: encointer_workspace
description: EncointerWallet made with Flutter.

workspace:
  - app
  - packages/endpoint_manager
  - packages/ew_encointer_utils
  - packages/ew_format
  - packages/ew_http
  - packages/ew_keyring
  - packages/ew_polkadart
  - packages/ew_primitives
  - packages/ew_storage
  - packages/ew_substrate_fixed
  - packages/ew_test_keys

environment:
  sdk: ">=3.6.0 <4.0.0"
  flutter: "3.35.0"

dev_dependencies:
  build_runner: ^2.4.7
  melos: ^7.0.0-dev.8

melos:
  sdkPath: ".flutter"

  command:
    bootstrap:
      runPubGetInParallel: false
      usePubspecOverrides: true

  # Notes:
  # 1.  On windows the multiline operator doesn't work in most cases, so we should try to have one liner scripts commands
  #     connected with '&&'.
  # 2.  make sure that you have installed the project dependencies with ./flutter/bin/dart pub get. Otherwise, melos
  #     will fallback to the globally installed version and errors might occur.
  #
  # Cross platform linebreaks:
  # * Can only be used with a `melos exec` command, which must be after directly before the command to be executed. So
  #   after the `--` if a filter is used.
  # * Only works with the `>-` multiline operator for windows support.
  #
  # For more complex scenarios, we can consider writing cross-platform dart scripts as mentioned in this issue:
  # https://github.com/invertase/melos/issues/122

  scripts:
    format-120:
      run: dart format . --line-length 120
      description: "Format all Dart code"

    format-check:
      run: dart format . --line-length 120 --set-exit-if-changed
      description: "Check format all Dart code"

    analyze:
      run: dart analyze
      description: "Analyze all Dart code"

    analyze-check:
      run: dart analyze --fatal-warnings
      description: "Analyze all Dart code and exit if there are any fatal warnings"

    flutter-clean:
      run: flutter clean
      description: "Get pub dependencies"

    pub-get-workspace:
      run: dart pub get
      description: "Get pub workspace deps"

    pub-get:
      run: cd app && flutter pub get
      description: "Get pub dependencies"

    unit-test:
      run: flutter test
      description: "Run unit tests (all packages)"

    doctor:
      run: flutter doctor
      description: "Run Flutter doctor"

    run-build-runner:
      run: >-
        dart run melos exec -c 1 --depends-on="build_runner" -- \
        flutter pub run build_runner build --delete-conflicting-outputs
      description: "Generate code with build_runner"

    generate-translations:
      run: cd app && flutter gen-l10n
      description: "Generate translationsr"

    # Note: This produces bad filepaths on windows. Need to run this script afterwards:
    # `./scripts/replace_backslash_in_dart_files.sh packages/ew_polkadart`.
    run-polkadart-generate:
      run: >-
        cd packages/ew_polkadart && dart run polkadart_cli:generate -v
      description: "Generate encointer typdedefs with polkadart"

    # Unit test Encointer Wallet with tag
    unit-test-app-exclude-e2e:
      run: >-
        dart run melos exec --scope="encointer_wallet" -- \
        flutter test --exclude-tags encointer-node-e2e,production-e2e
      description: "Run unit tests excluding the `encointer-node-e2e` tag"

    unit-test-app-with-encointer-node-e2e:
      run: >-
        dart run melos exec --scope="encointer_wallet" -- \
        flutter test --tags encointer-node-e2e
      description: "Run unit tests with the `encointer-node-e2e` tag"

    unit-test-app-with-production-e2e:
      run: >-
        dart run melos exec --scope="encointer_wallet" -- \
        flutter test --tags production-e2e
      description: "Run unit tests with the `encointer-node-e2e` tag"

    unit-test-app-with-endpoint-health-e2e:
      run: >-
        dart run melos exec --scope="encointer_wallet" -- \
        flutter test --tags endpoint-health-e2e
      description: "Run unit tests with the `endpoint-health-e2e` tag"

    unit-test-packages:
      run: >-
        dart run melos exec --ignore="encointer_wallet" -- \
        flutter test
      description: "Run unit tests with the `encointer-node-e2e` tag"

    # Run Encointer Wallet
    run-android:
      run: cd app && flutter run --flavor dev
      description: "Run encointer_wallet on an Android platform"

    run-ios:
      run: cd app && flutter run
      description: "Run encointer_wallet on an iOS platform"

    # Build apk for androids splitted per Application Binary Interface (abi)
    build-apk-split:
      run: cd app && flutter build apk --split-per-abi --flavor dev
      description: "Build an APK file"

    build-appbundle-play:
      run: cd app && flutter build appbundle --release --flavor play
      description: "Build an appbundle file ready to be submitted to the google play console"

    precache-ios:
      run: cd app && flutter precache â€“ios
      description: "Precache IOS - needed for manual pod install"

    build-ipa-release:
      run: cd app && flutter build ios --release --export-options-plist ios/ExportOptions.plist
      description: "Build a signed IPA"

    build-ipa-debug:
      run: cd app && flutter build ios --no-codesign
      description: "Build a signed IPA"

    # Integration test Encointer Wallet
    integration-app-test-android:
      run: cd app && flutter drive --target=test_driver/app.dart --flavor dev
      description: "Run integration test on Android"

    integration-app-test-android-screenshot:
      # screenshots are not possible with the impeller engine
      run: cd app && flutter drive --no-enable-impeller --target=test_driver/app.dart --flavor dev --dart-define=locales=en
      description: "Run integration test on Android with screenshot capturing enabled."

    integration-app-test-ios:
      run: cd app && flutter drive --target=test_driver/app.dart
      description: "Run integration test on iOS"

    integration-app-test-ios-screenshot:
      run: cd app && flutter drive --target=test_driver/app.dart --dart-define=locales=en
      description: "Run integration test on IOS with screenshot capturing enabled."

    integration-app-test-ios-screenshot-multi-language:
      run: cd app && flutter drive --target=test_driver/app.dart --dart-define=locales=de,fr,ru,en
      description: "Run integration test on IOS with screenshot multi language capturing enabled."

    integration-app-test-android-screenshot-multi-language:
      run: cd app && flutter drive --target=test_driver/app.dart --flavor dev --dart-define=locales=de,fr,ru,en
      description: "Run integration test on Android with screenshot multi language capturing enabled. "

    integration-scan-test-android:
      # screenshots are not possible with the impeller engine
      run: cd app && flutter drive --no-enable-impeller --target=test_driver/scan_page.dart --flavor dev
      description: "Run integration test for QR scan on Android"

    integration-scan-test-ios:
      run: cd app && flutter drive --target=test_driver/scan_page.dart
      description: "Run integration test for QR scan on iOS"

    flutter-config-no-analytics:
      run: cd app && flutter config --no-analytics
    description: "Disables the analytics data in the local configuration file of the Flutter tool"
